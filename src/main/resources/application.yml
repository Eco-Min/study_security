server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/security_db
    username: root
    password: 1234
  jpa:
    hibernate:
      ddl-auto: create
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 548658035865-retmqr31c1oljfi4kf2e9raruoomra9b.apps.googleusercontent.com
            client-secret: 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
            scope:
              - email
              - profile
          facebook:
            client-id: 473476817654979
            client-secret: 37f80e2dd9a4a9047a546cd91099be86
            scope:
              - email
              - public_profile
          naver:
            client-id: SnaN9J2uSgYN7mTsdCQS
            client-secret: zgpsNIMJ2a
#            scope:
#              - email
#              - name
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
        # Oauth2.0 공식 지원대상이 아니라 provider 설정을 해줘야 한다.
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response # 회원정보를 json의 response 키값으로 리턴해줌.
